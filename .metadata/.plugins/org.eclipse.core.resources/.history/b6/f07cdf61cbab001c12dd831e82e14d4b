package com.taller1.demo.services;

import java.util.Optional;

import com.taller1.demo.model.prod.Productcosthistory;
import com.taller1.demo.model.prod.Productcosthistory;
import com.taller1.demo.repositories.ProductcosthistoryRepository;

public class ProductcosthistoryServiceImp implements ProductcosthistoryService {

	private ProductcosthistoryRepository pchRepository;
	
	public ProductcosthistoryServiceImp(ProductcosthistoryRepository pchRepository) {
		this.pchRepository = pchRepository;
	}

	@Override
	public Productcosthistory saveProductcosthistory(Productcosthistory pch) {
		return pchRepository.save(pch);
	}

	@Override
	public Productcosthistory editProductcosthistory(Productcosthistory pch, Integer id) {
		Optional<Productcosthistory> op = pchRepository.findById(locId);
		Productcosthistory opLoc = op.get();
		if (loc.getName().length() < 5)
			throw new IllegalArgumentException("Name Length");
		if (loc.getAvailability().intValue() < 1 && loc.getAvailability().intValue() > 10)
			throw new IllegalArgumentException("Availability");
		if (loc.getCostrate().intValue() < 0 && loc.getCostrate().intValue() > 1)
			throw new IllegalArgumentException();
		opLoc.setName(loc.getName());
		opLoc.setAvailability(loc.getAvailability());
		opLoc.setCostrate(loc.getCostrate());
		return locationRepository.save(opLoc);
	}

}
