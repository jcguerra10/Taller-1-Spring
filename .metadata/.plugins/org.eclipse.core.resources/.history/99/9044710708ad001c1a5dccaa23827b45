package com.taller1.demo.services;

import java.util.Optional;

import com.taller1.demo.model.prod.Product;
import com.taller1.demo.repositories.ProductRepository;

public class ProductServiceImp implements ProductService {
	
	public ProductRepository productRepository;
	
	public ProductServiceImp(ProductRepository productRepository) {
		this.productRepository = productRepository;
	}
	
	@Override
	public Product saveProduct(Product pro) {
		if(pro == null)
			throw new NullPointerException();
		if(pro.getProductsubcategory() == null)
			throw new NullPointerException("Not have Sub category");
		if(pro.getProductsubcategory().getProductcategory() == null)
			throw new NullPointerException("Not have Category");
		if(pro.getProductnumber().equals(""))
			throw new IllegalArgumentException("Not Have Product Number");
		if(pro.getSellstartdate().compareTo(pro.getSellenddate()) < 0)
			throw new IllegalArgumentException("Start Date Greater than End Date");
		if(pro.getSize().intValue() <= 0)
			throw new IllegalArgumentException("Size is not Greater than 0");
		if(pro.getWeight().doubleValue() <= 0)
			throw new IllegalArgumentException("Weight is not Greater than 0");
		return productRepository.save(pro);		
	}

	@Override
	public Product editProduct(Product pro, Integer id) {
		Optional<Product> opPro = productRepository.findById(id);
		Product editPro = opPro.get();
		if(pro == null)
			throw new NullPointerException();
		if(pro.getProductsubcategory() == null)
			throw new NullPointerException("Not have Sub category");
		if(pro.getProductsubcategory().getProductcategory() == null)
			throw new NullPointerException("Not have Category");
		if(pro.getProductnumber().equals(""))
			throw new IllegalArgumentException("Not Have Product Number");
		if(pro.getSellstartdate().compareTo(pro.getSellenddate()) < 0)
			throw new IllegalArgumentException("Start Date Greater than End Date");
		if(pro.getSize().intValue() <= 0)
			throw new IllegalArgumentException("Size is not Greater than 0");
		if(pro.getWeight().doubleValue() <= 0)
			throw new IllegalArgumentException("Weight is not Greater than 0");
		editPro
		return productRepository.save(editPro);
	}

}
